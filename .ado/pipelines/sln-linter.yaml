trigger: none

resources:
  - repo: self

variables:
  agent: "ubuntu-latest"

  linter_report: "./linter/report.json"

jobs:
  - job: Lint
    steps:
      - checkout: self
        clean: true
        submodules: false
      - bash: |
          set -e

          lr=$(realpath "$linter_report")
          (echo $lr | grep -Eq "^$(realpath .)(.*)") || \
            (echo "linter report file out of context '$lr'" exit 1)
        env:
          linter_report: $(linter_report)

      - bash: |
          ./scripts/be/lint-sln-check.sh && exit 0
          rt="$?"
          echo "lint script failed with error: $rt"

          # if script failed
          [ "$rt" == "$err_code" ] && exit ${rt}

          # if linter found error
          echo "setting pipeline variable 'lint_result' to 'nok'"
          echo "##vso[task.setvariable variable=lint_result]nok"

          exit "$rt"
        env:
          linter_verbosity: "diagnostic"
          linter_severity: "error"
          solution_folder: "./src"
          update_tool: "true"
          linter_report: $(linter_report)
          err_code: 100
        displayName: "Run Linter"

      - bash: |
          set -e
          lr=$(realpath $linter_report)
          echo "Checking existance of file '$lr'"
          ([ -f ${lr} ] && echo "File '${lr}' exists") || \
            (echo "File '${lr}' does not exist" && exit 1)

          echo "##vso[task.setvariable variable=publish_report]yes"
        env:
          linter_report: $(linter_report)
        condition: eq(variables['lint_result'], 'nok')

      - publish: "./linter/report.json"
        artifact: Report
        condition: eq(variables['publish_report'], 'yes')

